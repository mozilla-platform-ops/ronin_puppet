define ROOT C:\Program Files (x86)\nxlog

Moduledir %ROOT%\modules
CacheDir  %ROOT%\data
Pidfile   %ROOT%\data\nxlog.pid
SpoolDir  %ROOT%\data
LogFile   %ROOT%\data\nxlog.log

<Extension syslog>
  Module xm_syslog
</Extension>

<Extension multiline-datetime-header>
  Module xm_multiline
  HeaderLine /^\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d\.\d\d\dZ:\s/
</Extension>

<Extension multiline-gw-datetime-header>
  Module xm_multiline
  HeaderLine /^\d\d\d\d\/\d\d\/\d\d\s\d\d:\d\d:\d\d\s|Z:\\task_\d\d\d\d\d\d\d\d\d\d>/
</Extension>

<Input eventlog_apps>
  Module im_msvistalog
  Query <QueryList>\
          <Query Id="0">\
            <Select Path="Application">*[System[Provider[@Name='Bootstrap'] or Provider[@Name='MaintainSystem']]]</Select>\
          </Query>\
        </QueryList>
</Input>

<Input eventlog_basic>
  Module im_msvistalog
  Query <QueryList>\
          <Query Id="0">\
            <Select Path="Application">*[System[Level=1 or Level=2 or Level=3]]</Select>\
            <Select Path="Security">*[System[Level=1 or Level=2 or Level=3]]</Select>\
            <Select Path="System">*[System[Level=1 or Level=2 or Level=3 or EventID=1074]]</Select>\
            <Select Path="HardwareEvents">*[System[Level=1 or Level=2 or Level=3]]</Select>\
          </Query>\
        </QueryList>
</Input>

<Input eventlog_audit>
  Module im_msvistalog
  Query <QueryList>\
          <Query Id="0">\
            <Select Path="Microsoft-Windows-TerminalServices-LocalSessionManager/Operational">*</Select>\
            <Select Path="OpenSSH/Operational">*</Select>\
          </Query>\
        </QueryList>
</Input>

<Input generic_worker_log>
  Module im_file
  File 'C:/generic-worker/generic-worker.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType multiline-gw-datetime-header
  Exec if $raw_event =~ /^(\d\d\d\d\/\d\d\/\d\d\s\d\d:\d\d:\d\d)\s(.*)/s { $EventTime = parsedate($1); $Message = $2; }
  Exec $SourceName = 'generic-worker';
</Input>

<Input generic_worker_wrapper_log>
  Module im_file
  File 'C:/generic-worker/generic-worker-wrapper.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType LineBased
  Exec $SourceName = 'generic-worker-wrapper';
</Input>

<Input generic_worker_service_log>
  Module im_file
  File 'C:/generic-worker/generic-worker-service.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType LineBased
  Exec $SourceName = 'generic-worker-service';
</Input>

<Input worker_runner_service_log>
  Module im_file
  File 'C:\worker-runner\worker-runner-service.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType LineBased
  Exec $SourceName = 'worker-runner-service';
</Input>

<Input bootstrap_puppet_log>
  Module im_file
  File 'C:\logs\\*-bootstrap-puppet.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType LineBased
  Exec $SourceName = 'boostrap-puppet';
</Input>

<Input puppet_run_log>
  Module im_file
  File 'C:\logs\\*-puppetrun.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType LineBased
  Exec $SourceName = 'puppet-run';
</Input>

<Input nxlog>
  Module im_file
  File 'C:/Program Files (x86)/nxlog/data/nxlog.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType LineBased
  Exec if $raw_event =~ /^(\d\d\d\d-\d\d-\d\d\s\d\d:\d\d:\d\d)\s(.*)$/ { $EventTime = parsedate($1); $Message = $2; }
  Exec $SourceName = 'nxlog';
</Input>

<Input azure_agent_runtime_log>
  Module im_file
  File 'C:/WindowsAzure/Logs/AgentRuntime.log'
  SavePos TRUE
  ReadFromLast TRUE
  Exec $SourceName = 'azure-agent-runtime';
</Input>

<Input azure_monitoring_agent_log>
  Module im_file
  File 'C:/WindowsAzure/Logs/MonitoringAgent.log'
  SavePos TRUE
  ReadFromLast TRUE
  Exec $SourceName = 'azure-monitoring-agent';
</Input>

<Input azure_net_agent_log>
  Module im_file
  File 'C:\WindowsAzure\Logs\NetAgent-*.log'
  SavePos TRUE
  ReadFromLast TRUE
  Exec $SourceName = 'azure-net-agent';
</Input>

<Input azure_telemetry_log>
  Module im_file
  File 'C:/WindowsAzure/Logs/Telemetry.log'
  SavePos TRUE
  ReadFromLast TRUE
  Exec $SourceName = 'azure-telemetry';
</Input>

<Input azure_transparent_installer_log>
  Module im_file
  File 'C:/WindowsAzure/Logs/TransparentInstaller.log'
  SavePos TRUE
  ReadFromLast TRUE
  Exec $SourceName = 'azure-transparent-installer';
</Input>

<Input azure_app_agent_log>
  Module im_file
  File 'C:/WindowsAzure/Logs/WaAppAgent.log'
  SavePos TRUE
  ReadFromLast TRUE
  Exec $SourceName = 'azure-app-agent';
</Input>

<Input azure_sec_agent_log>
  Module im_file
  File 'C:\WindowsAzure\Logs\WaSecAgent-*.log'
  SavePos TRUE
  ReadFromLast TRUE
  Exec $SourceName = 'azure-sec-agent';
</Input>

<Output papertrail>
  Module om_ssl
  Host <%= $win_nxlog::configuration::log_aggregator %>
  Port 52806
  CAFile %ROOT%\cert\papertrail-bundle.pem
  AllowUntrusted FALSE
  Exec $Hostname = hostname_fqdn();
  Exec to_syslog_ietf();
</Output>

<Route eventlog_apps_papertrail>
  Path eventlog_apps => papertrail
</Route>

<Route bootstrap_puppet_log_papertrail>
  Path bootstrap_puppet_log => papertrail
</Route>

<Route puppet_run_log_papertrail>
  Path puppet_run_log => papertrail
</Route>
<Route eventlog_basic_papertrail>
  Path eventlog_basic => papertrail
</Route>

<Route eventlog_audit_papertrail>
  Path eventlog_audit => papertrail
</Route>

<Route generic_worker_log_papertrail>
  Path generic_worker_log => papertrail
</Route>

<Route generic_worker_wrapper_log_papertrail>
  Path generic_worker_wrapper_log => papertrail
</Route>

<Route generic_worker_service_log_papertrail>
  Path generic_worker_service_log => papertrail
</Route>

<Route worker_runner_service_log_papertrail>
  Path worker_runner_service_log => papertrail
</Route>

<Route bootstrap_puppet_log_papertrail>
  Path bootstrap_puppet_log => papertrail
</Route>

<Route puppet_run_log_papertrail
  Path puppet_run_log => papertrail
</Route>

<Route azure_agent_runtime_log_papertrail>
  Path azure_agent_runtime_log => papertrail
</Route>

<Route azure_monitoring_agent_log_papertrail>
  Path azure_monitoring_agent_log => papertrail
</Route>

<Route azure_net_agent_log_papertrail>
  Path azure_net_agent_log => papertrail
</Route>

<Route azure_telemetry_log_papertrail>
  Path azure_telemetry_log => papertrail
</Route>

<Route azure_transparent_installer_log_papertrail>
  Path azure_transparent_installer_log => papertrail
</Route>

<Route azure_app_agent_log_papertrail>
  Path azure_app_agent_log => papertrail
</Route>

<Route azure_sec_agent_log_papertrail>
  Path azure_sec_agent_log => papertrail
</Route>

<Route nxlog_papertrail>
  Path nxlog => papertrail
</Route>
