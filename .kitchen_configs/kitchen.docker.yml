---
driver:
  name: docker
  public_key: test/id_ed25519.pub
  private_key: test/id_ed25519
  use_sudo: false
  privileged: true
  # if on mac m1/m2 with arm64, need this because our s3 install only has amd64
  # - fails on circleci if left enabled
  # - now enabled if needed automatically in `bin/kitchen_docker`
  # docker_platform: linux/amd64
  #
  # on m1 macs, nothing even starts on amd64 now...
  # docker_platform: linux/arm64
  run_command: /bin/systemd
  cap_add:
    - SYS_ADMIN
  mount: type=bind,source=/tmp/docker/var/cache/apt,destination=/var/cache/apt
  provision_command:
    - rm -f /etc/apt/apt.conf.d/docker-clean
    # Harden apt against transient HTTP issues
    - |
      cat >/etc/apt/apt.conf.d/80-retries <<'EOF'
      Acquire::Retries "6";
      Acquire::http::Pipeline-Depth "0";
      Acquire::http::No-Cache "true";
      Acquire::http::Timeout "30";
      EOF
    # Use the mirror list but exclude archive.ubuntu.com
    - |
      CODENAME="$(. /etc/os-release && echo $UBUNTU_CODENAME)"
      # Backup original list
      cp /etc/apt/sources.list /etc/apt/sources.list.bak
      # Build a new mirror file excluding archive.ubuntu.com
      curl -fsSL http://mirrors.ubuntu.com/mirrors.txt | grep -v 'archive.ubuntu.com' > /tmp/mirrors.txt || echo 'http://archive.ubuntu.com/ubuntu/' > /tmp/mirrors.txt
      sed -i "s|http://archive.ubuntu.com/ubuntu/|mirror://mirrors.ubuntu.com/mirrors.txt|g" /etc/apt/sources.list
      # Replace mirror list with our filtered one
      sed -i "s|mirror://mirrors.ubuntu.com/mirrors.txt|mirror://$(cat /tmp/mirrors.txt | head -n 1 | sed 's|http://||;s|/$||')/ubuntu/|g" /etc/apt/sources.list
      # Ensure security repo still exists
      grep -q "^deb http://security.ubuntu.com/ubuntu ${CODENAME}-security" /etc/apt/sources.list || \
        echo "deb http://security.ubuntu.com/ubuntu ${CODENAME}-security main restricted universe multiverse" >> /etc/apt/sources.list
    - rm -rf /var/lib/apt/lists/*
    # Clean then update with retries; install dbus leanly
    - rm -rf /var/lib/apt/lists/*
    - apt-get -o Acquire::Retries=6 update -y
    - DEBIAN_FRONTEND=noninteractive apt-get -o Acquire::Retries=6 install -y --no-install-recommends dbus

provisioner:
  name: puppet_apply
  modules_path: modules:r10k_modules
  hiera_data_path: data
  hiera_data_remote_path: /tmp/kitchen/data
  hiera_deep_merge: true
  hiera_writer_files:
    - secrets/vault.yaml:
        telegraf:
          user: telegraf
          password: telegraf4fun
        papertrail:
          host: localhost
          port: 1111
        linux_vnc:
          user: cltbld
          group: cltbld
          user_homedir: '/home/cltbld'
          password: 'vnc4free'
        cltbld_user:
          password: 'abc123'
          salt: 'h3hhahchahah'
          iterations: '3'
        generic_worker:
          gecko_t_linux_talos:
            taskcluster_client_id: '123'
            taskcluster_access_token: 'foo'
            livelog_secret: 'haha'
            quarantine_client_id: '3333'
            quarantine_access_token: 'Q_TOKEN'
            bugzilla_api_key: 'BZ_KEY'
          gecko_t_linux_netperf:
            taskcluster_client_id: '123'
            taskcluster_access_token: 'foo'
            livelog_secret: 'haha'
            quarantine_client_id: '3333'
            quarantine_access_token: 'Q_TOKEN'
            bugzilla_api_key: 'BZ_KEY'
          gecko_t_linux_2204_talos:
            taskcluster_client_id: '123'
            taskcluster_access_token: 'foo'
            livelog_secret: 'haha'
            quarantine_client_id: '3333'
            quarantine_access_token: 'Q_TOKEN'
            bugzilla_api_key: 'BZ_KEY'
          gecko_t_linux_talos_2404:
            taskcluster_client_id: '123'
            taskcluster_access_token: 'foo'
            livelog_secret: 'haha'
            quarantine_client_id: '3333'
            quarantine_access_token: 'Q_TOKEN'
            bugzilla_api_key: 'BZ_KEY'
          gecko_t_linux_talos_2404_wayland:
            taskcluster_client_id: '123'
            taskcluster_access_token: 'foo'
            livelog_secret: 'haha'
            quarantine_client_id: '3333'
            quarantine_access_token: 'Q_TOKEN'
            bugzilla_api_key: 'BZ_KEY'
  puppet_verbose: true
  # explodes if version specified, see https://github.com/petems/puppet-install-shell/issues/137
  # puppet_version: 7
  # used to work, but now grumpy about gpg keys
  # puppet_omnibus_url: https://raw.githubusercontent.com/mozilla-platform-ops/puppet-install-shell/2204-jammy-support/install_puppet_7_agent.sh
  # fix for gpg keys (includes upstream fixes for 2204)
  # puppet_omnibus_url: https://raw.githubusercontent.com/mozilla-platform-ops/puppet-install-shell/puppet7-1804-fix/install_puppet_7_agent.sh
  # 20250716-2404-work: adds 2404 support
  puppet_omnibus_url: https://raw.githubusercontent.com/mozilla-platform-ops/puppet-install-shell/20250716-2404-work/install_puppet_7_agent.sh
  puppet_debug: true
  require_chef_for_busser: true
  require_puppet_omnibus: true
  require_puppet_repo: false
  custom_options: '--show_diff'
  verify_host_key: false
  resolve_with_librarian_puppet: false
  resolve_with_r10k: false
  puppet_detailed_exitcodes: true
  puppet_whitelist_exit_code: [0, 2]
  install_custom_facts: true
  # this lets spec tests know we're in CI
  custom_facts: {'running_in_test_kitchen': true}

platforms:
  - name: ubuntu-18.04
    provisioner:
      custom_options: '-e "include roles_profiles::roles::gecko_t_linux_talos"'
  - name: ubuntu-22.04
    provisioner:
      custom_options: '-e "include roles_profiles::roles::gecko_t_linux_2204_talos"'
  - name: ubuntu-24.04
    provisioner:
      custom_options: '-e "include roles_profiles::roles::gecko_t_linux_2404_talos"'

verifier:
  name: inspec
  color: <%= !ENV.include?('CI') %>

busser:
  sudo: true

suites:
  - name: linux-netperf
    provisioner:
      custom_options: '-e "include roles_profiles::roles::gecko_t_linux_netperf"'
    attributes:
    includes:
      - ubuntu-18.04  # no moonshot 2204 config yet
  - name: linux-perf
    attributes:
    includes:
      - ubuntu-18.04
      - ubuntu-22.04
      - ubuntu-24.04
  - name: linux-perf-wayland
    driver:
      env_variables:
        # set so our spec tests can detect what to test (x11 or wayland)
        MOZILLA_WAYLAND: '1'
    transport:
      env_variables:
        # set so our spec tests can detect what to test (x11 or wayland)
        MOZILLA_WAYLAND: '2'
    provisioner:
      custom_options: '-e "include roles_profiles::roles::gecko_t_linux_2404_talos_wayland"'
    attributes:
    includes:
      - ubuntu-24.04
    verifier:
      suite_name: linux-perf
  - name: bitbar
    provisioner:
      custom_options: '-e "include roles_profiles::roles::bitbar_devicepool"'
    includes:
      - ubuntu-22.04  # no more 1804 bitbar
      # - ubuntu-24.04  # TODO
    attributes:
