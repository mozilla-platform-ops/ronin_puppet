#!/usr/bin/env bash

set -e
# set -x

# dockerfile specifies this dir as a bind mount for caching debs
mkdir -p /tmp/docker/var/cache/apt

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
root_dir="${script_dir}/.."
kitchen_config="${root_dir}/.kitchen_configs/kitchen.docker.yml"
temp_kitchen_config="/tmp/ronin_puppet_kitchen_docker_temp_config.yml"

# add docker_platform if we're on arm64
if [[ "$(uname -m)" == "arm64" ]]; then
    echo "This system is running on arm64 architecture."

    # old way, force to amd64 to work around tc installation not picking correct arch
    # echo "Modifying kitchen.docker.yml to use linux/amd64 platform."
    # sed 's/# docker_platform: linux\/amd64$/docker_platform: linux\/amd64/' "${kitchen_config}" > "${temp_kitchen_config}"

    # new way, use arm64
    echo "Modifying kitchen.docker.yml to use linux/arm64 platform."
    sed 's/# docker_platform: linux\/arm64$/docker_platform: linux\/arm64/' "${kitchen_config}" > "${temp_kitchen_config}"

    export KITCHEN_YAML="${temp_kitchen_config}"
    # for testing
    # grep docker_platform ${KITCHEN_YAML}
    # exit 0
else
    # echo "This system is not running on arm64 architecture."
    export KITCHEN_YAML="${kitchen_config}"
fi

# if command is test, alert that results on arm64 will be different and recommend circleci run.
if [[ "$1" == "test" && "$(uname -m)" == "arm64" ]]; then
    echo ""
    echo "Warning: Test results on arm64 can be misleading because we don't have arm64"
    echo "binaries and/or detection everywhere. Everything should work on CircleCI."
    echo ""
fi

# set CI=true so our spec_helper can disable problematic tests
CI=TRUE bundle exec kitchen "$@"
