Vagrant.configure("2") do |c|
  c.vm.box = "<%= config[:box] %>"
  c.vm.box_url = "<%= config[:box_url] %>"

  if Vagrant.has_plugin?("vagrant-cachier")
    c.cache.auto_detect = true
    c.cache.scope = :box
  end

<% if config[:vm_hostname] %>
  c.vm.hostname = "<%= config[:vm_hostname] %>"
<% end %>
<% if config[:guest] %>
  c.vm.guest = <%= config[:guest] %>
<% end %>
<% if config[:username] %>
  c.ssh.username = "<%= config[:username] %>"
<% end %>
<% if config[:ssh_key] %>
  c.ssh.private_key_path = "<%= config[:ssh_key] %>"
<% end %>

<% Array(config[:network]).each do |opts| %>
  c.vm.network(:<%= opts[0] %>, <%= opts[1..-1].join(", ") %>)
<% end %>

  c.vm.synced_folder ".", "/vagrant", disabled: true
<% config[:synced_folders].each do |source, destination, options| %>
  c.vm.synced_folder "<%= source %>", "<%= destination %>", <%= options %>
<% end %>

  c.vm.provider :<%= config[:provider] %> do |p|
<% config[:customize].each do |key, value| %>
  <% case config[:provider]
     when "virtualbox" %>
    p.customize ["modifyvm", :id, "--<%= key %>", "<%= value %>"]
  <% when "rackspace", "softlayer" %>
    p.<%= key %> = "<%= value%>"
  <% when /^vmware_/ %>
    <% if key == :memory %>
      <% unless config[:customize].include?(:memsize) %>
    p.vmx["memsize"] = "<%= value %>"
      <% end %>
    <% else %>
    p.vmx["<%= key %>"] = "<%= value %>"
    <% end %>
  <% end %>
<% end %>
  end

  c.vm.provision "shell", inline: <<-EOF

    echo "generating dummy ssl certificate"
    openssl req \
      -x509 \
      -nodes \
      -days 365 \
      -newkey rsa:2048 \
      -keyout /etc/ssl/localtest.key \
      -out /etc/ssl/localtest.crt \
      -subj '/C=DE/ST=Town/L=Baz/O=BAR/OU=FOO/CN=IT'
    cat /etc/ssl/localtest.crt /etc/ssl/localtest.key > /etc/ssl/localtest.pem

    echo "installing dummy ssl certificate"
    mkdir -p /etc/foo-ssl/star_foobar_net/
    ln -s /etc/ssl/localtest.key  /etc/foo-ssl/star_foobar_net/star_foobar_net.key
    ln -s /etc/ssl/localtest.crt  /etc/foo-ssl/star_foobar_net/star_foobar_net.crt
    ln -s /etc/ssl/localtest.crt  /etc/foo-ssl/star_foobar_net/star_foobar_net.ca-bundle
    ln -s /etc/ssl/localtest.pem  /etc/foo-ssl/star_foobar_net/star_foobar_net.pem

    echo "reinstalling puppet from upstream distribution repository"
    rpm -Uvh https://yum.puppetlabs.com/puppet5/puppet5-release-el-7.noarch.rpm
    yum install -y puppet-agent
    yum install -y ruby vim git curl
    mkdir -pv /opt/chef/embedded/bin/
    ln -snf /opt/puppetlabs/puppet/bin/ruby /opt/chef/embedded/bin/
    cd /etc/
    dpkg --get-selections|awk '$2 ~ /^install$/{print  $1}'|sort > package.list
    git init
    git add -A .
    git commit -m "initial state" -a
    EOF
 end

